{"version":3,"sources":["Components/Addcategory.js","Components/GifGriditem.js","helpers/getGifs.js","Components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["Addcategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGriditem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACXC,mBAAS,IADE,mBACxCC,EADwC,KAC5BC,EAD4B,KAe/C,OAEC,0BAAMC,SAZY,SAACC,GACnBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,OAUf,2BACAO,KAAK,OACLC,MAAOT,EACNU,SApBsB,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,YCLbG,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAEnC,OACC,yBAAKC,UAAU,0CAEd,yBAAKC,IAAMF,EAAKG,IAAKJ,IACrB,2BAAIA,EAAJ,O,uBCPUK,EAAO,uCAAC,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,0FAC0EO,UAAUF,GADpF,yBAECG,MAAMR,GAFP,cAEZS,EAFY,gBAGEA,EAAKC,OAHP,uBAGXC,EAHW,EAGXA,KACDC,EAAOD,EAAKE,KAAM,SAAAC,GAAO,IAAD,EAC7B,MAAO,CACPC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACVC,IAAG,UAACc,EAAIE,cAAL,aAAC,EAAYC,iBAAiBjB,QARjB,kBAYXY,GAZW,4CAAD,sDCGRM,EAAU,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAAc,ECDV,SAAEA,GAAe,IAAD,EACjBpB,mBAAS,CAClC0B,KAAK,GACLQ,SAAQ,IAHkC,mBACpCC,EADoC,KAC7BC,EAD6B,KAwB3C,OAlBAC,qBAAW,WACVlB,EAASC,GACRkB,MAAM,SAAAC,GAEHH,EAAS,CACTV,KAAKa,EACLL,SAAQ,SASX,CAACd,IAGIe,EDpBgBK,CAAcpB,GAA7BM,EAH6B,EAG7BA,KAAKQ,EAHwB,EAGxBA,QAGd,OACC,oCACA,wBAAIlB,UAAU,uDAAuDI,GAEpEc,GAAU,uBAAGlB,UAAU,uDAAb,YAGX,yBAAKA,UAAU,aAIXU,EAAKE,KAAK,SAAAC,GAAG,OACb,kBAAC,EAAD,eACKY,IAAKZ,EAAIC,IACLD,UErBFa,EAAe,WAAO,IAAD,EAEI1C,mBAAS,CAAC,sBAFd,mBAEzB2C,EAFyB,KAEb5C,EAFa,KAIjC,OACC,6BACA,4CACA,kBAAC,EAAD,CAAcA,cAAeA,IAC7B,6BAEC,4BAEC4C,EAAWf,KAAK,SAAAR,GAAQ,OACvB,kBAAC,EAAD,CACAqB,IAAKrB,EACLA,SAAUA,UCbfwB,IAASC,OAEL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.197be773.chunk.js","sourcesContent":["import React ,{useState}from 'react'\nimport PropTypes from 'prop-types';\n\n\nexport const Addcategory = ({setCategories}) => {\n const [inputValue, setInputValue] = useState('');\n\tconst handelInputChage= (e)=>{\n    setInputValue(e.target.value);\n\t}\n\tconst handeleSumit=(e)=>{\n\t\te.preventDefault();\n\t\tif(inputValue.trim().length > 2){\n\t\t\tsetCategories(cats =>[ inputValue,...cats,]);\n\t\t\tsetInputValue(''); \n\t\t}\n\t\t//console.log('submit hecho ')\n\t\t\n\n\t}\n\treturn (\n\t\n\t\t<form onSubmit={handeleSumit}> \n\n\t\t<input \n\t\ttype=\"text\" \n\t\tvalue={inputValue} \n\t  onChange={handelInputChage}\n\n\t\t/>\n\t</ form>\n\n\t)\n}\nAddcategory.propTypes={\n\tsetCategories:PropTypes.func.isRequired\n\n}"," import React from 'react'\n \n export const GifGriditem = ({ title,url}) => {\n \n \treturn (\n \t\t<div className=\"card animate__animated animate__bounce\">\n\n \t\t <img src ={url} alt={title}/>\n \t\t <p>{title} </p>\n\n \t\t  \n \t\t\t\n \t\t</div>\n \t)\n }\n \n ","\n export const getGifs=async( category )=>{\n  \tconst url=`https://api.giphy.com/v1/gifs/search?api_key=vFTeHQXbZ559HQg0udM17eSC71g40pzd&q=${encodeURI(category ) } ry&limit=10`\n    const resp = await fetch(url);\n    const {data}= await resp.json();\n    const gifs = data.map ( img =>{\n    \treturn {\n    \tid: img.id,\n    \ttitle: img.title,\n      url:img.images?.downsized_medium.url\n    }\n    })\n\n    return gifs;\n    \n  }","import React from 'react' ;\nimport {GifGriditem} from './GifGriditem';\nimport {useFetchGifs} from '../hooks/useFetchGifs'\n\nexport const GifGrid = ({category}) => {\n\n\n\t const { data,loading} =useFetchGifs( category ); \n\t \n \n\treturn (\n\t\t<>\n\t\t<h3 className=\"animate__animated animate__bounce animate__delay-2s\">{category }</h3>\n\n\t\t{loading&& <p className=\"animate__animated animate__bounce animate__delay-2s\"> Loading</p>}\n\n\t\t\n\t\t<div className=\"card-grid\">\n\t\t\t\n\n\t    {\n\t   \t data.map( img =>(\n\t   \t <GifGriditem \n           key={img.id} \n\t   \t    { ... img }\n\t   \t    />\n\n\t   \t ))\n\t   }\n\t    \n\t  \n\t\t</div>  \n\t\t</>\n\t)\n}\n\n"," import {useState,useEffect} from 'react'\n import {getGifs} from '../helpers/getGifs'; \n \n export const useFetchGifs = ( category ) => {\n \tconst [state, setState] = useState({\n \t\tdata:[],\n \t\tloading:true\n});\n\n \tuseEffect( ()=>{\n \t\tgetGifs( category  )\n \t\t.then( imgs =>{\n\n \t\t\t\t  setState({\n \t\t\t\t  data:imgs,\n \t\t\t\t  loading:false\n \t\t\t});\n\n \t\t\t\n \t\t\n\n \t\t})\n\n\n \t},[category])\n\n\n \treturn state;\n \t}","import React,{useState} from 'react'\nimport {Addcategory} from './Components/Addcategory';\nimport {GifGrid} from './Components/GifGrid';\nexport const GifExpertApp = () => {\n\t\n\t const [categories, setCategories] = useState(['Dragon ball super',] )\n\t\n\treturn  (\n\t\t<div>\n\t\t<h2>GifExpertApp</h2>\n\t\t<Addcategory  setCategories={setCategories}/>\n\t\t<hr/> \n\t\t\n\t\t\t<ol>\n\t\t\t{ \n\t\t\t\tcategories.map( category =>(\n\t\t\t\t <GifGrid\n\t\t\t\t key={category} \n\t\t\t\t category={category}\n\t\t\t\t  />\n\t\t  ))\n\t\t  }\n\n\t\t\t\n\n\t\t\t</ol>\n\t\t</div>\n\t\t)\n\t}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport{GifExpertApp} from './GitExpertApp'\n\nReactDOM.render(\n\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}